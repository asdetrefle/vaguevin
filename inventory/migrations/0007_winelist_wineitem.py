# Generated by Django 5.2.7 on 2025-10-28 15:36

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("inventory", "0006_delete_oldwine"),
    ]

    operations = [
        migrations.CreateModel(
            name="WineList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Client name or ref of the wine list: (e.g. 'Xavier Luo Offer')",
                        max_length=255,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("created", "Client Review"),
                            ("submitted", "Submitted"),
                            ("confirmed", "Confirmed"),
                            ("delivered", "Delivered"),
                            ("finalized", "Finalized"),
                            ("archived", "Archived"),
                        ],
                        default="created",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_sent_to_client", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WineItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "offer_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Proposed unit offer price to client",
                        max_digits=12,
                    ),
                ),
                ("offer_qty", models.PositiveIntegerField(default=0)),
                (
                    "note",
                    models.TextField(
                        blank=True,
                        help_text="Optional note for the client (e.g. tasting note)",
                        null=True,
                    ),
                ),
                (
                    "accept_qty",
                    models.PositiveIntegerField(
                        default=None, help_text="if None, equals offer_qty", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "inventory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="wine_items",
                        to="inventory.wineinventory",
                    ),
                ),
                (
                    "wine_list",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="inventory.winelist",
                    ),
                ),
            ],
            options={
                "ordering": ["inventory__wine__name"],
                "unique_together": {("wine_list", "inventory")},
            },
        ),
    ]
